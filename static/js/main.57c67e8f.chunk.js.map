{"version":3,"sources":["icons.js","utils.js","Components.js","schema.js","plugins.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_1__","library","add","faBold","faItalic","faUnderline","faQuoteRight","faListOl","faListUl","faImages","faPaperclip","faLink","faUndo","faRedo","faSave","faFileUpload","faFileImage","faFilePdf","faFile","faTrash","insertImage","editor","src","target","select","insertBlock","type","data","insertFile","isImage","url","imageExtensions","includes","URL","pathname","split","pop","getExtension","fileUploader","event","inserter","getEventRange","files","imageFilesInsert","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","file","value","reader","FileReader","addEventListener","command","result","readAsDataURL","_iterator","Symbol","iterator","next","done","err","return","filesInsert","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop2","name","size","filesize","round","_iterator2","dropOrPaste","transfer","getEventTransfer","text","isUrl","wrapLink","href","wrapInline","moveToEnd","unwrapLink","unwrapInline","linkPaste","selection","isCollapsed","this","hasLinks","confirmDownload","e","confirm","concat","preventDefault","Toolbar","_ref","children","react_default","a","createElement","className","Button","_ref2","onClick","icon","color","active","title","index_es","FileNode","_ref3","download","schema","document","last","normalize","code","node","child","paragraph","Block","create","insertNodeByKey","key","nodes","blocks","image","isVoid","plugins","options","isBoldHotkey","isKeyHotkey","isItalicHotkey","isUnderlinedHotkey","isSaveHotkey","onKeyDown","mark","toggleMark","MarkHotkeys","onPaste","onDrop","Lists","ordered_list","unordered_list","list_item","classNames","require","savedContents","JSON","parse","localStorage","getItem","process","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","Value","fromJSON","initialContents","limit","onRedo","redo","onUndo","undo","onSave","isLimitReached","alert","editorContents","stringify","toJSON","setItem","saveToLocal","onRestore","discard","saved","setState","onLink","assertThisInitialized","isExpanded","window","prompt","insertText","moveFocusBackward","length","onImage","onChange","onOpenImage","inputImageFile","current","click","onOpenFile","inputFile","onImageFileSelect","onFileSelect","onClickBlock","isList","unwrapList","wrapList","onClickMark","some","block","hasMark","activeMarks","hasBlock","inlines","inline","ref","onLimitChange","renderToolbar","renderMarkButton","renderBlockButton","style","width","padding","inputRenderer","display","accept","nodesRenderer","props","attributes","isFocused","get","assign","selected","alt","toObject","renderMark","isActive","React","createRef","slate_react_es","spellCheck","autoFocus","placeholder","renderNode","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57c67e8f.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faBold,\n  faItalic,\n  faUnderline,\n  faQuoteRight,\n  faListOl,\n  faListUl,\n  faImages,\n  faPaperclip,\n  faLink,\n  faUndo,\n  faRedo,\n  faSave,\n  faFileUpload,\n  faFileImage,\n  faFilePdf,\n  faFile,\n  faTrash\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  faBold,\n  faItalic,\n  faUnderline,\n  faQuoteRight,\n  faListOl,\n  faListUl,\n  faImages,\n  faPaperclip,\n  faLink,\n  faUndo,\n  faRedo,\n  faSave,\n  faFileUpload,\n  faFileImage,\n  faFilePdf,\n  faFile,\n  faTrash\n);\n","import { Block } from 'slate';\nimport { getEventRange, getEventTransfer } from 'slate-react';\nimport imageExtensions from 'image-extensions';\nimport isUrl from 'is-url';\nimport filesize from 'filesize';\n\nexport function saveToLocal(value) {\n  const editorContents = JSON.stringify(value.toJSON());\n  localStorage.setItem('content', editorContents);\n}\n\nexport function getLocalContents() {\n  return JSON.parse(localStorage.getItem('content'));\n}\n\nexport function isDocumentEdited(state, value) {\n  return value.document !== state.value.document;\n}\n\nexport function insertImage(editor, src, target) {\n  if (target) {\n    editor.select(target);\n  }\n\n  editor.insertBlock({\n    type: 'image',\n    data: { src }\n  });\n}\n\nexport function insertFile(editor, data, target) {\n  if (target) {\n    editor.select(target);\n  }\n  editor.insertBlock({\n    type: 'file',\n    data\n  });\n}\n\nfunction getExtension(url) {\n  return new URL(url).pathname.split('.').pop();\n}\n\nexport function isImage(url) {\n  return imageExtensions.includes(getExtension(url));\n}\n\nexport function normalize(editor, { code, node, child }) {\n  if (code === 'last_child_type_invalid') {\n    const paragraph = Block.create('paragraph');\n    return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n  }\n}\n\nexport function fileUploader(event, editor, inserter) {\n  const target = getEventRange(event, editor);\n  const { files } = event.target;\n  inserter(files, editor, target);\n}\n\nexport function imageFilesInsert(files, editor, target) {\n  for (const file of files) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => {\n      editor.command(insertImage, reader.result, target);\n    });\n    reader.readAsDataURL(file);\n  }\n}\nexport function filesInsert(files, editor, target) {\n  for (const file of files) {\n    const reader = new FileReader();\n    const data = {\n      name: file.name,\n      size: filesize(file.size, { round: 0 }),\n      type: file.type\n    };\n    reader.readAsDataURL(file);\n    reader.addEventListener('load', () => {\n      data.src = reader.result;\n      editor.command(insertFile, data, target);\n    });\n  }\n}\n\nexport function dropOrPaste(event, editor, next) {\n  const target = getEventRange(event, editor);\n  if (!target && event.type === 'drop') return next();\n\n  const transfer = getEventTransfer(event);\n  const { type, text, files } = transfer;\n\n  if (type === 'files') {\n    imageFilesInsert(files, editor, target);\n    return;\n  }\n\n  if (type === 'text') {\n    if (!isUrl(text)) return next();\n    if (!isImage(text)) return next();\n    editor.command(insertImage, text, target);\n    return;\n  }\n\n  next();\n}\n\nexport function wrapLink(editor, href) {\n  editor.wrapInline({\n    type: 'link',\n    data: { href }\n  });\n\n  editor.moveToEnd();\n}\n\nexport function unwrapLink(editor) {\n  editor.unwrapInline('link');\n}\n\nexport function linkPaste(event, editor, next) {\n  if (editor.value.selection.isCollapsed) return next();\n\n  const transfer = getEventTransfer(event);\n  const { type, text } = transfer;\n  if (type !== 'text' && type !== 'html') return next();\n  if (!isUrl(text)) return next();\n\n  if (this.hasLinks()) {\n    editor.command(unwrapLink);\n  }\n\n  editor.command(wrapLink, text);\n}\n\nexport function confirmDownload(e) {\n  // eslint-disable-next-line no-restricted-globals\n  !confirm(`Download ${name}?`) && e.preventDefault();\n}\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Mark } from 'slate';\nimport { confirmDownload } from './utils';\n\nexport function Toolbar({ children }) {\n  return <div className=\"toolbar\">{children}</div>;\n}\n\nexport function Button({ onClick, icon, active }) {\n  const color = active ? `#000` : `#777`;\n  return (\n    <button title={icon} className=\"toolbar-button\" onClick={onClick}>\n      <FontAwesomeIcon icon={icon} size=\"2x\" color={color} />\n    </button>\n  );\n}\n\nexport function FileNode({ src, name, size, type }) {\n  const icon = type === 'application/pdf' ? 'file-pdf' : 'file';\n  return (\n    <a\n      title=\"click to download\"\n      className=\"file\"\n      download={name}\n      href={src}\n      onClick={confirmDownload}\n    >\n      <FontAwesomeIcon icon={icon} size=\"2x\" /> {name} ({size})\n    </a>\n  );\n}\n","import { normalize } from './utils';\n\nexport default {\n  document: {\n    last: { type: 'paragraph' },\n    normalize\n  },\n  blocks: {\n    image: {\n      isVoid: true\n    },\n    file: {\n      isVoid: true\n    }\n  }\n};\n","import { isKeyHotkey } from 'is-hotkey';\nimport { dropOrPaste, linkPaste } from './utils';\nimport Lists from '@convertkit/slate-lists';\n\nfunction MarkHotkeys(options) {\n  const isBoldHotkey = isKeyHotkey('mod+b');\n  const isItalicHotkey = isKeyHotkey('mod+i');\n  const isUnderlinedHotkey = isKeyHotkey('mod+u');\n  const isSaveHotkey = isKeyHotkey('mod+s');\n  return {\n    onKeyDown(event, editor, next) {\n      let mark;\n\n      if (isBoldHotkey(event)) {\n        mark = 'bold';\n      } else if (isItalicHotkey(event)) {\n        mark = 'italic';\n      } else if (isUnderlinedHotkey(event)) {\n        mark = 'underlined';\n      } else if (isSaveHotkey(event)) {\n        event.preventDefault();\n        return next();\n      } else {\n        return next();\n      }\n\n      event.preventDefault();\n      editor.toggleMark(mark);\n    }\n  };\n}\n\nfunction PasteOrDropImage(options) {\n  return {\n    onDrop: dropOrPaste,\n    onPaste: dropOrPaste\n  };\n}\n\nfunction LinkPaste(options) {\n  return {\n    onPaste: linkPaste\n  };\n}\n\nexport default [\n  MarkHotkeys(),\n  LinkPaste(),\n  PasteOrDropImage(),\n  Lists({\n    blocks: {\n      ordered_list: 'ordered-list',\n      unordered_list: 'unordered-list',\n      list_item: 'list-item'\n    },\n    classNames: {\n      ordered_list: 'ordered-list',\n      unordered_list: 'unordered-list',\n      list_item: 'list-item'\n    }\n  })\n];\n","import React, { Component } from 'react';\nimport { Editor, getEventRange } from 'slate-react';\nimport { Value } from 'slate';\nimport { hot } from 'react-hot-loader';\n\nimport {\n  getLocalContents,\n  saveToLocal,\n  isDocumentEdited,\n  insertImage,\n  fileUploader,\n  filesInsert,\n  imageFilesInsert,\n  wrapLink,\n  unwrapLink\n} from './utils';\nimport { Toolbar, Button, FileNode } from './Components';\nimport initialContents from './initialContents.json';\nimport schema from './schema';\nimport plugins from './plugins';\nimport './App.css';\nrequire('./icons');\n\nconst savedContents = getLocalContents();\nconst DEFAULT_NODE = 'paragraph';\n\nfunction FNode(props) {\n  return (\n    <pre {...props.attributes}>\n      <code>{props.children}</code>\n    </pre>\n  );\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.inputImageFile = React.createRef();\n    this.inputFile = React.createRef();\n  }\n\n  state = {\n    value: Value.fromJSON(savedContents || initialContents),\n    limit: 10\n  };\n\n  onRedo = event => {\n    event.preventDefault();\n    this.editor.redo();\n  };\n  onUndo = event => {\n    event.preventDefault();\n    this.editor.undo();\n  };\n  onSave = event => {\n    if (this.isLimitReached()) {\n      alert('Maximum Limit Reached!');\n    }\n    saveToLocal(this.state.value);\n  };\n  onRestore = event => {\n    const saved = Value.fromJSON(savedContents);\n    let discard;\n    if (isDocumentEdited(this.state, saved)) {\n      // eslint-disable-next-line no-restricted-globals\n      discard = confirm('Document has changed! Are you sure?');\n    }\n    if (discard) {\n      this.setState({\n        value: saved\n      });\n    }\n  };\n  onLink = event => {\n    event.preventDefault();\n\n    const { editor } = this;\n    const { value } = editor;\n    const hasLinks = this.hasLinks();\n\n    if (hasLinks) {\n      editor.command(unwrapLink);\n    } else if (value.selection.isExpanded) {\n      const href = window.prompt('Enter the URL of the link:');\n\n      if (href == null) {\n        return;\n      }\n\n      editor.command(wrapLink, href);\n    } else {\n      const href = window.prompt('Enter the URL of the link:');\n\n      if (href == null) {\n        return;\n      }\n\n      const text = window.prompt('Enter the text for the link:');\n\n      if (text == null) {\n        return;\n      }\n\n      editor\n        .insertText(text)\n        .moveFocusBackward(text.length)\n        .command(wrapLink, href);\n    }\n  };\n  onImage = event => {\n    event.preventDefault();\n    const src = window.prompt('Enter the URL of the image:');\n    if (!src) return;\n    this.editor.command(insertImage, src);\n  };\n  onChange = ({ value }) => {\n    // // autosave\n    // if (isDocumentEdited(this.state, value)) {\n    //   saveToLocal(value);\n    // }\n    this.setState({ value });\n  };\n\n  onOpenImage = event => {\n    this.inputImageFile.current.click();\n  };\n  onOpenFile = event => {\n    this.inputFile.current.click();\n  };\n\n  onImageFileSelect = event => {\n    fileUploader(event, this.editor, imageFilesInsert);\n  };\n\n  onFileSelect = event => {\n    fileUploader(event, this.editor, filesInsert);\n  };\n  onClickBlock = (event, type) => {\n    event.preventDefault();\n    if (this.isList()) {\n      this.editor.unwrapList();\n    } else {\n      this.editor.wrapList({ type });\n    }\n  };\n\n  onClickMark = (event, type) => {\n    event.preventDefault();\n    this.editor.toggleMark(type);\n  };\n\n  isList = () => {\n    const { value } = this.state;\n    return value.blocks.some(block => block.type === 'list-item-child');\n  };\n\n  hasMark = type => {\n    const { value } = this.state;\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n  hasBlock = type => {\n    const { value } = this.state;\n    return value.blocks.some(node => node.type === type);\n  };\n  hasLinks = () => {\n    const { value } = this.state;\n    return value.inlines.some(inline => inline.type === 'link');\n  };\n\n  ref = editor => {\n    this.editor = editor;\n  };\n\n  isLimitReached = () =>\n    this.state.value.document.nodes.size >= this.state.limit;\n  render() {\n    return (\n      <div className=\"appcontainer\">\n        {this.renderToolbar()}\n        <div className=\"editor\">\n          <Editor\n            spellCheck\n            autoFocus\n            plugins={plugins}\n            schema={schema}\n            placeholder=\"Start typing...\"\n            value={this.state.value}\n            onChange={this.onChange}\n            renderNode={this.nodesRenderer}\n            renderMark={this.renderMark}\n            ref={this.ref}\n          />\n        </div>\n      </div>\n    );\n  }\n  onLimitChange = event => {\n    this.setState({\n      limit: event.target.value\n    });\n  };\n\n  renderToolbar = () => (\n    <Toolbar>\n      <Button\n        icon=\"save\"\n        active={!this.isLimitReached()}\n        onClick={this.onSave}\n      />\n      <Button icon=\"trash\" onClick={this.onRestore} />\n      <Button icon=\"undo\" onClick={this.onUndo} />\n      <Button icon=\"redo\" onClick={this.onRedo} />\n      {this.renderMarkButton('bold', 'bold')}\n      {this.renderMarkButton('italic', 'italic')}\n      {this.renderMarkButton('underlined', 'underline')}\n      {this.renderBlockButton('block-quote', 'quote-right')}\n      {this.renderBlockButton('ordered-list', 'list-ol')}\n      {this.renderBlockButton('unordered-list', 'list-ul')}\n      <Button icon=\"images\" onClick={this.onImage} />\n      <Button icon=\"file-image\" onClick={this.onOpenImage} />\n      <Button icon=\"file-upload\" onClick={this.onOpenFile} />\n      <Button icon=\"link\" onClick={this.onLink} />\n      <input\n        type=\"number\"\n        style={{ width: `35px`, padding: `10px` }}\n        value={this.state.limit}\n        onChange={this.onLimitChange}\n      />\n      <span>{'<-- limit'}</span>\n      {this.inputRenderer()}\n    </Toolbar>\n  );\n\n  inputRenderer = () => (\n    <div>\n      <input\n        ref={this.inputImageFile}\n        type=\"file\"\n        style={{ display: 'none' }}\n        onChange={this.onImageFileSelect}\n        accept=\"image/*\"\n      />\n      <input\n        ref={this.inputFile}\n        type=\"file\"\n        style={{ display: 'none' }}\n        onChange={this.onFileSelect}\n        accept=\"application/pdf,text/plain\"\n      />\n    </div>\n  );\n  nodesRenderer = (props, editor, next) => {\n    const { attributes, children, node, isFocused } = props;\n    switch (node.type) {\n      case 'block-quote':\n        return <blockquote {...attributes}>{children}</blockquote>;\n      case 'unorderd-list':\n        return <ul {...attributes}>{children}</ul>;\n      case 'ordered-list':\n        return <ol {...attributes}>{children}</ol>;\n      case 'list-item':\n        return <li {...attributes}>{children}</li>;\n\n      case 'image': {\n        const src = node.data.get('src');\n        return <img src={src} selected={isFocused} {...attributes} alt=\"\" />;\n      }\n      case 'link': {\n        const { data } = node;\n        const href = data.get('href');\n        return (\n          <a {...attributes} href={href}>\n            {children}\n          </a>\n        );\n      }\n      case 'file': {\n        const data = node.data.toObject();\n\n        return <FileNode {...data} />;\n      }\n      default:\n        return next();\n    }\n  };\n\n  renderMark = (props, editor, next) => {\n    const { children, mark, attributes } = props;\n\n    switch (mark.type) {\n      case 'bold':\n        return <strong {...attributes}>{children}</strong>;\n      case 'italic':\n        return <em {...attributes}>{children}</em>;\n      case 'underlined':\n        return <u {...attributes}>{children}</u>;\n      default:\n        return next();\n    }\n  };\n  renderMarkButton = (type, icon) => {\n    const isActive = this.hasMark(type);\n    return (\n      <Button\n        icon={icon}\n        active={isActive}\n        onClick={event => this.onClickMark(event, type)}\n      />\n    );\n  };\n\n  renderBlockButton = (type, icon) => {\n    return (\n      <Button\n        icon={icon}\n        active={false}\n        onClick={event => this.onClickBlock(event, type)}\n      />\n    );\n  };\n}\n\nexport default (process.env.NODE_ENV === 'development'\n  ? hot(module)(App)\n  : App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}