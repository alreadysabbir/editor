{"version":3,"sources":["icons.js","utils.js","Components.js","schema.js","plugins.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_1__","library","add","faBold","faItalic","faUnderline","faQuoteRight","faListOl","faListUl","faImages","faPaperclip","faLink","faUndo","faRedo","faSave","faFileUpload","faFileImage","faFilePdf","faFile","faTrash","getLocalContents","JSON","parse","localStorage","getItem","insertImage","editor","src","target","select","insertBlock","type","data","moveFocusToEndOfDocument","insertFile","console","log","window","selectedFile","isImage","url","imageExtensions","includes","URL","pathname","split","pop","getExtension","fileUploader","event","inserter","getEventRange","files","imageFilesInsert","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","file","value","reader","FileReader","addEventListener","command","result","readAsDataURL","_iterator","Symbol","iterator","next","done","err","return","filesInsert","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop2","name","size","filesize","round","_iterator2","dropOrPaste","transfer","getEventTransfer","text","isUrl","wrapLink","href","wrapInline","moveToEnd","unwrapLink","unwrapInline","linkPaste","selection","isCollapsed","this","hasLinks","confirmDownload","e","confirm","concat","preventDefault","Toolbar","_ref","children","react_default","a","createElement","className","Button","_ref2","onClick","icon","color","active","title","onMouseDown","index_es","FileNode","_ref3","download","schema","document","last","normalize","code","node","child","paragraph","Block","create","insertNodeByKey","key","nodes","blocks","image","isVoid","plugins","options","isBoldHotkey","isKeyHotkey","isItalicHotkey","isUnderlinedHotkey","isSaveHotkey","isTab","isHotkey","onKeyDown","mark","_editor$value","startBlock","listItem","getParent","depth","getDepth","increaseListItemDepth","onTab","toggleMark","MarkHotkeys","onPaste","onDrop","Lists","ordered_list","unordered_list","list_item","classNames","require","savedContents","DEFAULT_NODE","listTypes","process","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","Value","fromJSON","initialContents","limit","onRedo","redo","onUndo","undo","onSave","isLimitReached","alert","editorContents","stringify","toJSON","setItem","saveToLocal","onRestore","discard","saved","setState","onLink","assertThisInitialized","isExpanded","prompt","insertText","moveFocusBackward","length","onImage","onChange","onOpenImage","inputImageFile","current","click","onOpenFile","inputFile","onImageFileSelect","onFileSelect","onClickBlock","isActive","hasBlock","isList","unwrapList","wrapList","setBlocks","onClickMark","some","block","hasMark","activeMarks","inlines","inline","ref","onLimitChange","renderToolbar","renderMarkButton","renderBlockButton","style","width","padding","inputRenderer","display","accept","nodesRenderer","props","attributes","isFocused","get","assign","selected","alt","open","toObject","renderMark","React","createRef","slate_react_es","spellCheck","autoFocus","placeholder","renderNode","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55b58808.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faBold,\n  faItalic,\n  faUnderline,\n  faQuoteRight,\n  faListOl,\n  faListUl,\n  faImages,\n  faPaperclip,\n  faLink,\n  faUndo,\n  faRedo,\n  faSave,\n  faFileUpload,\n  faFileImage,\n  faFilePdf,\n  faFile,\n  faTrash\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  faBold,\n  faItalic,\n  faUnderline,\n  faQuoteRight,\n  faListOl,\n  faListUl,\n  faImages,\n  faPaperclip,\n  faLink,\n  faUndo,\n  faRedo,\n  faSave,\n  faFileUpload,\n  faFileImage,\n  faFilePdf,\n  faFile,\n  faTrash\n);\n","import { Block } from 'slate';\nimport { getEventRange, getEventTransfer } from 'slate-react';\nimport imageExtensions from 'image-extensions';\nimport isUrl from 'is-url';\nimport filesize from 'filesize';\n\nexport function saveToLocal(value) {\n  const editorContents = JSON.stringify(value.toJSON());\n  localStorage.setItem('content', editorContents);\n}\n\nexport function getLocalContents() {\n  return JSON.parse(localStorage.getItem('content'));\n}\n\nexport function isDocumentEdited(state, value) {\n  return value.document !== state.value.document;\n}\n\nexport function insertImage(editor, src, target) {\n  if (target) {\n    editor.select(target);\n  }\n\n  editor\n    .insertBlock({\n      type: 'image',\n      data: { src }\n    })\n    .moveFocusToEndOfDocument();\n}\n\nexport function insertFile(editor, data, target) {\n  if (target) {\n    editor.select(target);\n  }\n  console.log(editor);\n  window.editor = editor;\n  window.selectedFile = {\n    type: 'file',\n    data\n  };\n  editor\n    .insertBlock({\n      type: 'file',\n      data\n    })\n    .moveFocusToEndOfDocument();\n}\n\nfunction getExtension(url) {\n  return new URL(url).pathname.split('.').pop();\n}\n\nexport function isImage(url) {\n  return imageExtensions.includes(getExtension(url));\n}\n\nexport function normalize(editor, { code, node, child }) {\n  if (code === 'last_child_type_invalid') {\n    const paragraph = Block.create('paragraph');\n    return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n  }\n}\n\nexport function fileUploader(event, editor, inserter) {\n  const target = getEventRange(event, editor);\n  const { files } = event.target;\n  inserter(files, editor, target);\n}\n\nexport function imageFilesInsert(files, editor, target) {\n  for (const file of files) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => {\n      editor.command(insertImage, reader.result, target);\n    });\n    reader.readAsDataURL(file);\n  }\n}\nexport function filesInsert(files, editor, target) {\n  for (const file of files) {\n    const reader = new FileReader();\n    const data = {\n      name: file.name,\n      size: filesize(file.size, { round: 0 }),\n      type: file.type\n    };\n    reader.readAsDataURL(file);\n    reader.addEventListener('load', () => {\n      data.src = reader.result;\n      editor.command(insertFile, data, target);\n    });\n  }\n}\n\nexport function dropOrPaste(event, editor, next) {\n  const target = getEventRange(event, editor);\n  if (!target && event.type === 'drop') return next();\n\n  const transfer = getEventTransfer(event);\n  const { type, text, files } = transfer;\n\n  if (type === 'files') {\n    imageFilesInsert(files, editor, target);\n    return;\n  }\n\n  if (type === 'text') {\n    if (!isUrl(text)) return next();\n    if (!isImage(text)) return next();\n    editor.command(insertImage, text, target);\n    return;\n  }\n\n  next();\n}\n\nexport function wrapLink(editor, href) {\n  editor.wrapInline({\n    type: 'link',\n    data: { href }\n  });\n\n  editor.moveToEnd();\n}\n\nexport function unwrapLink(editor) {\n  editor.unwrapInline('link');\n}\n\nexport function linkPaste(event, editor, next) {\n  if (editor.value.selection.isCollapsed) return next();\n\n  const transfer = getEventTransfer(event);\n  const { type, text } = transfer;\n  if (type !== 'text' && type !== 'html') return next();\n  if (!isUrl(text)) return next();\n\n  if (this.hasLinks()) {\n    editor.command(unwrapLink);\n  }\n\n  editor.command(wrapLink, text);\n}\n\nexport function confirmDownload(e) {\n  // eslint-disable-next-line no-restricted-globals\n  !confirm(`Download ${name}?`) && e.preventDefault();\n}\n\nexport function onTab(editor) {\n  const { document, startBlock } = editor.value;\n  const listItem = document.getParent(startBlock.key);\n  const depth = document.getDepth(listItem.key);\n  if (!listItem) return;\n  if (depth > 4) {\n    return;\n  }\n  editor.increaseListItemDepth();\n}\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Mark } from 'slate';\nimport { confirmDownload } from './utils';\n\nexport function Toolbar({ children }) {\n  return <div className=\"toolbar\">{children}</div>;\n}\n\nexport function Button({ onClick, icon, active }) {\n  const color = active ? `#000` : `#777`;\n  return (\n    <button title={icon} className=\"toolbar-button\" onMouseDown={onClick}>\n      <FontAwesomeIcon icon={icon} size=\"2x\" color={color} />\n    </button>\n  );\n}\n\nexport function FileNode({ src, name, size, type }) {\n  const icon = type === 'application/pdf' ? 'file-pdf' : 'file';\n  return (\n    <a\n      title=\"click to download\"\n      className=\"file\"\n      download={name}\n      href={src}\n      onClick={confirmDownload}\n    >\n      <FontAwesomeIcon icon={icon} size=\"2x\" /> {name} ({size})\n    </a>\n  );\n}\n","import { normalize } from './utils';\n\nexport default {\n  document: {\n    last: { type: 'paragraph' },\n    normalize\n  },\n  blocks: {\n    image: {\n      isVoid: true\n    },\n    file: {\n      isVoid: true\n    }\n  }\n};\n","import { isKeyHotkey, isHotkey } from 'is-hotkey';\nimport { dropOrPaste, linkPaste, onTab } from './utils';\nimport Lists from '@convertkit/slate-lists';\n\nfunction MarkHotkeys(options) {\n  const isBoldHotkey = isKeyHotkey('mod+b');\n  const isItalicHotkey = isKeyHotkey('mod+i');\n  const isUnderlinedHotkey = isKeyHotkey('mod+u');\n  const isSaveHotkey = isKeyHotkey('mod+s');\n  const isTab = isHotkey('tab');\n\n  return {\n    onKeyDown(event, editor, next) {\n      let mark;\n\n      if (isBoldHotkey(event)) {\n        mark = 'bold';\n      } else if (isItalicHotkey(event)) {\n        mark = 'italic';\n      } else if (isUnderlinedHotkey(event)) {\n        mark = 'underlined';\n      } else if (isSaveHotkey(event)) {\n        event.preventDefault();\n        return next();\n      } else if (isTab(event)) {\n        event.preventDefault();\n        return onTab(editor);\n      } else {\n        return next();\n      }\n\n      event.preventDefault();\n      editor.toggleMark(mark);\n    }\n  };\n}\n\nfunction PasteOrDropImage(options) {\n  return {\n    onDrop: dropOrPaste,\n    onPaste: dropOrPaste\n  };\n}\n\nfunction LinkPaste(options) {\n  return {\n    onPaste: linkPaste\n  };\n}\n\nexport default [\n  MarkHotkeys(),\n  LinkPaste(),\n  PasteOrDropImage(),\n  Lists({\n    blocks: {\n      ordered_list: 'ordered-list',\n      unordered_list: 'unordered-list',\n      list_item: 'list-item'\n    },\n    classNames: {\n      ordered_list: 'ordered-list',\n      unordered_list: 'unordered-list',\n      list_item: 'list-item'\n    }\n  })\n];\n","import React, { Component } from 'react';\nimport { Editor, getEventRange } from 'slate-react';\nimport { Value } from 'slate';\nimport { hot } from 'react-hot-loader';\n\nimport {\n  getLocalContents,\n  saveToLocal,\n  isDocumentEdited,\n  insertImage,\n  fileUploader,\n  filesInsert,\n  imageFilesInsert,\n  wrapLink,\n  unwrapLink\n} from './utils';\nimport { Toolbar, Button, FileNode } from './Components';\nimport initialContents from './initialContents.json';\nimport schema from './schema';\nimport plugins from './plugins';\nimport './App.css';\nrequire('./icons');\n\nlet savedContents = getLocalContents();\nconst DEFAULT_NODE = 'paragraph';\nconst listTypes = ['ordered-list', 'unordered-list'];\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.inputImageFile = React.createRef();\n    this.inputFile = React.createRef();\n  }\n\n  state = {\n    value: Value.fromJSON(savedContents || initialContents),\n    limit: 10\n  };\n\n  onRedo = event => {\n    event.preventDefault();\n    this.editor.redo();\n  };\n  onUndo = event => {\n    event.preventDefault();\n    this.editor.undo();\n  };\n  onSave = event => {\n    event.preventDefault();\n    if (this.isLimitReached()) {\n      alert('Maximum Limit Reached!');\n    }\n    saveToLocal(this.state.value);\n    savedContents = getLocalContents();\n  };\n  onRestore = event => {\n    event.preventDefault();\n    if (!savedContents) return;\n    const saved = Value.fromJSON(savedContents);\n    let discard;\n    if (isDocumentEdited(this.state, saved)) {\n      // eslint-disable-next-line no-restricted-globals\n      discard = confirm('Document has changed! Are you sure?');\n    }\n    if (discard) {\n      this.setState({\n        value: saved\n      });\n    }\n  };\n  onLink = event => {\n    event.preventDefault();\n\n    const { editor } = this;\n    const { value } = editor;\n    const hasLinks = this.hasLinks();\n\n    if (hasLinks) {\n      editor.command(unwrapLink);\n    } else if (value.selection.isExpanded) {\n      const href = window.prompt('Enter the URL of the link:');\n\n      if (href == null) {\n        return;\n      }\n\n      editor.command(wrapLink, href);\n    } else {\n      const href = window.prompt('Enter the URL of the link:');\n\n      if (href == null) {\n        return;\n      }\n\n      const text = window.prompt('Enter the text for the link:');\n\n      if (text == null) {\n        return;\n      }\n\n      editor\n        .insertText(text)\n        .moveFocusBackward(text.length)\n        .command(wrapLink, href);\n    }\n  };\n  onImage = event => {\n    event.preventDefault();\n    const src = window.prompt('Enter the URL of the image:');\n    if (!src) return;\n    this.editor.command(insertImage, src);\n  };\n  onChange = ({ value }) => {\n    // // autosave\n    // if (isDocumentEdited(this.state, value)) {\n    //   saveToLocal(value);\n    // }\n    this.setState({ value });\n  };\n\n  onOpenImage = event => {\n    event.preventDefault();\n    this.inputImageFile.current.click();\n  };\n  onOpenFile = event => {\n    event.preventDefault();\n    this.inputFile.current.click();\n  };\n\n  onImageFileSelect = event => {\n    fileUploader(event, this.editor, imageFilesInsert);\n  };\n\n  onFileSelect = event => {\n    fileUploader(event, this.editor, filesInsert);\n  };\n  onClickBlock = (event, type) => {\n    event.preventDefault();\n    const { editor } = this;\n    const isActive = this.hasBlock(type);\n\n    if (listTypes.includes(type)) {\n      if (this.isList()) {\n        editor.unwrapList();\n      } else {\n        editor.wrapList({ type });\n      }\n    } else {\n      editor.setBlocks(isActive ? DEFAULT_NODE : type);\n    }\n  };\n\n  onClickMark = (event, type) => {\n    event.preventDefault();\n    this.editor.toggleMark(type);\n  };\n\n  isList = () => {\n    const { value } = this.state;\n    return value.blocks.some(block => block.type === 'list-item-child');\n  };\n\n  hasMark = type => {\n    const { value } = this.state;\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n  hasBlock = type => {\n    const { value } = this.state;\n    return value.blocks.some(node => node.type === type);\n  };\n  hasLinks = () => {\n    const { value } = this.state;\n    return value.inlines.some(inline => inline.type === 'link');\n  };\n\n  ref = editor => {\n    this.editor = editor;\n  };\n\n  isLimitReached = () =>\n    this.state.value.document.nodes.size >= this.state.limit;\n  render() {\n    return (\n      <div className=\"appcontainer\">\n        {this.renderToolbar()}\n        <div className=\"editor\">\n          <Editor\n            spellCheck\n            autoFocus\n            plugins={plugins}\n            schema={schema}\n            placeholder=\"Start typing...\"\n            value={this.state.value}\n            onChange={this.onChange}\n            renderNode={this.nodesRenderer}\n            renderMark={this.renderMark}\n            ref={this.ref}\n          />\n        </div>\n      </div>\n    );\n  }\n  onLimitChange = event => {\n    this.setState({\n      limit: event.target.value\n    });\n  };\n\n  renderToolbar = () => (\n    <Toolbar>\n      <Button\n        icon=\"save\"\n        active={!this.isLimitReached()}\n        onClick={this.onSave}\n      />\n      <Button icon=\"trash\" onClick={this.onRestore} />\n      <Button icon=\"undo\" onClick={this.onUndo} />\n      <Button icon=\"redo\" onClick={this.onRedo} />\n      {this.renderMarkButton('bold', 'bold')}\n      {this.renderMarkButton('italic', 'italic')}\n      {this.renderMarkButton('underlined', 'underline')}\n      {this.renderBlockButton('block-quote', 'quote-right')}\n      {this.renderBlockButton('ordered-list', 'list-ol')}\n      {this.renderBlockButton('unordered-list', 'list-ul')}\n      <Button icon=\"images\" onClick={this.onImage} />\n      <Button icon=\"file-image\" onClick={this.onOpenImage} />\n      <Button icon=\"file-upload\" onClick={this.onOpenFile} />\n      <Button icon=\"link\" onClick={this.onLink} />\n      <input\n        type=\"number\"\n        style={{ width: `35px`, padding: `10px` }}\n        value={this.state.limit}\n        onChange={this.onLimitChange}\n      />\n      <span>{'<-- limit'}</span>\n      {this.inputRenderer()}\n    </Toolbar>\n  );\n\n  inputRenderer = () => (\n    <div>\n      <input\n        ref={this.inputImageFile}\n        type=\"file\"\n        style={{ display: 'none' }}\n        onChange={this.onImageFileSelect}\n        accept=\"image/*\"\n      />\n      <input\n        ref={this.inputFile}\n        type=\"file\"\n        style={{ display: 'none' }}\n        onChange={this.onFileSelect}\n        accept=\"application/pdf,text/plain\"\n      />\n    </div>\n  );\n  nodesRenderer = (props, editor, next) => {\n    const { attributes, children, node, isFocused } = props;\n    switch (node.type) {\n      case 'block-quote':\n        return <blockquote {...attributes}>{children}</blockquote>;\n      case 'unorderd-list':\n        return <ul {...attributes}>{children}</ul>;\n      case 'ordered-list':\n        return <ol {...attributes}>{children}</ol>;\n      case 'list-item':\n        return <li {...attributes}>{children}</li>;\n\n      case 'image': {\n        const src = node.data.get('src');\n        return (\n          <img\n            src={src}\n            selected={isFocused}\n            {...attributes}\n            alt=\"\"\n            className=\"image-node\"\n          />\n        );\n      }\n      case 'link': {\n        const { data } = node;\n        const href = data.get('href');\n        return (\n          <a\n            {...attributes}\n            href={href}\n            onMouseDown={e => window.open(href, '_blank')}\n          >\n            {children}\n          </a>\n        );\n      }\n      case 'file': {\n        const data = node.data.toObject();\n\n        return <FileNode {...data} />;\n      }\n      default:\n        return next();\n    }\n  };\n\n  renderMark = (props, editor, next) => {\n    const { children, mark, attributes } = props;\n\n    switch (mark.type) {\n      case 'bold':\n        return <strong {...attributes}>{children}</strong>;\n      case 'italic':\n        return <em {...attributes}>{children}</em>;\n      case 'underlined':\n        return <u {...attributes}>{children}</u>;\n      default:\n        return next();\n    }\n  };\n  renderMarkButton = (type, icon) => {\n    const isActive = this.hasMark(type);\n    return (\n      <Button\n        icon={icon}\n        active={isActive}\n        onClick={event => this.onClickMark(event, type)}\n      />\n    );\n  };\n\n  renderBlockButton = (type, icon) => {\n    return (\n      <Button\n        icon={icon}\n        active={false}\n        onClick={event => this.onClickBlock(event, type)}\n      />\n    );\n  };\n}\n\nexport default (process.env.NODE_ENV === 'development'\n  ? hot(module)(App)\n  : App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}