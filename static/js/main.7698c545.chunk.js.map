{"version":3,"sources":["icons.js","utils.js","Components.js","schema.js","plugins.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_1__","library","add","faBold","faItalic","faUnderline","faQuoteRight","faListOl","faListUl","faImages","faPaperclip","faLink","faUndo","faRedo","faSave","faFileUpload","faFileImage","faFilePdf","faFile","faTrash","insertImage","editor","src","target","select","insertBlock","type","data","insertFile","isImage","url","imageExtensions","includes","URL","pathname","split","pop","getExtension","fileUploader","event","inserter","getEventRange","files","imageFilesInsert","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","file","value","reader","FileReader","addEventListener","command","result","readAsDataURL","_iterator","Symbol","iterator","next","done","err","return","filesInsert","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop2","name","size","filesize","round","_iterator2","dropOrPaste","transfer","getEventTransfer","text","isUrl","wrapLink","href","wrapInline","moveToEnd","unwrapLink","unwrapInline","linkPaste","selection","isCollapsed","this","hasLinks","confirmDownload","e","confirm","concat","preventDefault","Toolbar","_ref","children","react_default","a","createElement","className","Button","_ref2","onClick","icon","color","active","title","onMouseDown","index_es","FileNode","_ref3","download","schema","document","last","normalize","code","node","child","paragraph","Block","create","insertNodeByKey","key","nodes","blocks","image","isVoid","plugins","options","isBoldHotkey","isKeyHotkey","isItalicHotkey","isUnderlinedHotkey","isSaveHotkey","onKeyDown","mark","toggleMark","MarkHotkeys","onPaste","onDrop","Lists","ordered_list","unordered_list","list_item","classNames","require","savedContents","JSON","parse","localStorage","getItem","DEFAULT_NODE","listTypes","process","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","Value","fromJSON","initialContents","limit","onRedo","redo","onUndo","undo","onSave","isLimitReached","alert","editorContents","stringify","toJSON","setItem","saveToLocal","onRestore","discard","saved","setState","onLink","assertThisInitialized","isExpanded","window","prompt","insertText","moveFocusBackward","length","onImage","onChange","onOpenImage","inputImageFile","current","click","onOpenFile","inputFile","onImageFileSelect","onFileSelect","onClickBlock","isActive","hasBlock","isList","unwrapList","wrapList","setBlocks","onClickMark","some","block","hasMark","activeMarks","inlines","inline","ref","onLimitChange","renderToolbar","renderMarkButton","renderBlockButton","style","width","padding","inputRenderer","display","accept","nodesRenderer","props","attributes","isFocused","get","assign","selected","alt","toObject","renderMark","React","createRef","slate_react_es","spellCheck","autoFocus","placeholder","renderNode","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7698c545.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faBold,\n  faItalic,\n  faUnderline,\n  faQuoteRight,\n  faListOl,\n  faListUl,\n  faImages,\n  faPaperclip,\n  faLink,\n  faUndo,\n  faRedo,\n  faSave,\n  faFileUpload,\n  faFileImage,\n  faFilePdf,\n  faFile,\n  faTrash\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  faBold,\n  faItalic,\n  faUnderline,\n  faQuoteRight,\n  faListOl,\n  faListUl,\n  faImages,\n  faPaperclip,\n  faLink,\n  faUndo,\n  faRedo,\n  faSave,\n  faFileUpload,\n  faFileImage,\n  faFilePdf,\n  faFile,\n  faTrash\n);\n","import { Block } from 'slate';\nimport { getEventRange, getEventTransfer } from 'slate-react';\nimport imageExtensions from 'image-extensions';\nimport isUrl from 'is-url';\nimport filesize from 'filesize';\n\nexport function saveToLocal(value) {\n  const editorContents = JSON.stringify(value.toJSON());\n  localStorage.setItem('content', editorContents);\n}\n\nexport function getLocalContents() {\n  return JSON.parse(localStorage.getItem('content'));\n}\n\nexport function isDocumentEdited(state, value) {\n  return value.document !== state.value.document;\n}\n\nexport function insertImage(editor, src, target) {\n  if (target) {\n    editor.select(target);\n  }\n\n  editor.insertBlock({\n    type: 'image',\n    data: { src }\n  });\n}\n\nexport function insertFile(editor, data, target) {\n  if (target) {\n    editor.select(target);\n  }\n  editor.insertBlock({\n    type: 'file',\n    data\n  });\n}\n\nfunction getExtension(url) {\n  return new URL(url).pathname.split('.').pop();\n}\n\nexport function isImage(url) {\n  return imageExtensions.includes(getExtension(url));\n}\n\nexport function normalize(editor, { code, node, child }) {\n  if (code === 'last_child_type_invalid') {\n    const paragraph = Block.create('paragraph');\n    return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n  }\n}\n\nexport function fileUploader(event, editor, inserter) {\n  const target = getEventRange(event, editor);\n  const { files } = event.target;\n  inserter(files, editor, target);\n}\n\nexport function imageFilesInsert(files, editor, target) {\n  for (const file of files) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => {\n      editor.command(insertImage, reader.result, target);\n    });\n    reader.readAsDataURL(file);\n  }\n}\nexport function filesInsert(files, editor, target) {\n  for (const file of files) {\n    const reader = new FileReader();\n    const data = {\n      name: file.name,\n      size: filesize(file.size, { round: 0 }),\n      type: file.type\n    };\n    reader.readAsDataURL(file);\n    reader.addEventListener('load', () => {\n      data.src = reader.result;\n      editor.command(insertFile, data, target);\n    });\n  }\n}\n\nexport function dropOrPaste(event, editor, next) {\n  const target = getEventRange(event, editor);\n  if (!target && event.type === 'drop') return next();\n\n  const transfer = getEventTransfer(event);\n  const { type, text, files } = transfer;\n\n  if (type === 'files') {\n    imageFilesInsert(files, editor, target);\n    return;\n  }\n\n  if (type === 'text') {\n    if (!isUrl(text)) return next();\n    if (!isImage(text)) return next();\n    editor.command(insertImage, text, target);\n    return;\n  }\n\n  next();\n}\n\nexport function wrapLink(editor, href) {\n  editor.wrapInline({\n    type: 'link',\n    data: { href }\n  });\n\n  editor.moveToEnd();\n}\n\nexport function unwrapLink(editor) {\n  editor.unwrapInline('link');\n}\n\nexport function linkPaste(event, editor, next) {\n  if (editor.value.selection.isCollapsed) return next();\n\n  const transfer = getEventTransfer(event);\n  const { type, text } = transfer;\n  if (type !== 'text' && type !== 'html') return next();\n  if (!isUrl(text)) return next();\n\n  if (this.hasLinks()) {\n    editor.command(unwrapLink);\n  }\n\n  editor.command(wrapLink, text);\n}\n\nexport function confirmDownload(e) {\n  // eslint-disable-next-line no-restricted-globals\n  !confirm(`Download ${name}?`) && e.preventDefault();\n}\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Mark } from 'slate';\nimport { confirmDownload } from './utils';\n\nexport function Toolbar({ children }) {\n  return <div className=\"toolbar\">{children}</div>;\n}\n\nexport function Button({ onClick, icon, active }) {\n  const color = active ? `#000` : `#777`;\n  return (\n    <button title={icon} className=\"toolbar-button\" onMouseDown={onClick}>\n      <FontAwesomeIcon icon={icon} size=\"2x\" color={color} />\n    </button>\n  );\n}\n\nexport function FileNode({ src, name, size, type }) {\n  const icon = type === 'application/pdf' ? 'file-pdf' : 'file';\n  return (\n    <a\n      title=\"click to download\"\n      className=\"file\"\n      download={name}\n      href={src}\n      onClick={confirmDownload}\n    >\n      <FontAwesomeIcon icon={icon} size=\"2x\" /> {name} ({size})\n    </a>\n  );\n}\n","import { normalize } from './utils';\n\nexport default {\n  document: {\n    last: { type: 'paragraph' },\n    normalize\n  },\n  blocks: {\n    image: {\n      isVoid: true\n    },\n    file: {\n      isVoid: true\n    }\n  }\n};\n","import { isKeyHotkey } from 'is-hotkey';\nimport { dropOrPaste, linkPaste } from './utils';\nimport Lists from '@convertkit/slate-lists';\n\nfunction MarkHotkeys(options) {\n  const isBoldHotkey = isKeyHotkey('mod+b');\n  const isItalicHotkey = isKeyHotkey('mod+i');\n  const isUnderlinedHotkey = isKeyHotkey('mod+u');\n  const isSaveHotkey = isKeyHotkey('mod+s');\n  return {\n    onKeyDown(event, editor, next) {\n      let mark;\n\n      if (isBoldHotkey(event)) {\n        mark = 'bold';\n      } else if (isItalicHotkey(event)) {\n        mark = 'italic';\n      } else if (isUnderlinedHotkey(event)) {\n        mark = 'underlined';\n      } else if (isSaveHotkey(event)) {\n        event.preventDefault();\n        return next();\n      } else {\n        return next();\n      }\n\n      event.preventDefault();\n      editor.toggleMark(mark);\n    }\n  };\n}\n\nfunction PasteOrDropImage(options) {\n  return {\n    onDrop: dropOrPaste,\n    onPaste: dropOrPaste\n  };\n}\n\nfunction LinkPaste(options) {\n  return {\n    onPaste: linkPaste\n  };\n}\n\nexport default [\n  MarkHotkeys(),\n  LinkPaste(),\n  PasteOrDropImage(),\n  Lists({\n    blocks: {\n      ordered_list: 'ordered-list',\n      unordered_list: 'unordered-list',\n      list_item: 'list-item'\n    },\n    classNames: {\n      ordered_list: 'ordered-list',\n      unordered_list: 'unordered-list',\n      list_item: 'list-item'\n    }\n  })\n];\n","import React, { Component } from 'react';\nimport { Editor, getEventRange } from 'slate-react';\nimport { Value } from 'slate';\nimport { hot } from 'react-hot-loader';\n\nimport {\n  getLocalContents,\n  saveToLocal,\n  isDocumentEdited,\n  insertImage,\n  fileUploader,\n  filesInsert,\n  imageFilesInsert,\n  wrapLink,\n  unwrapLink\n} from './utils';\nimport { Toolbar, Button, FileNode } from './Components';\nimport initialContents from './initialContents.json';\nimport schema from './schema';\nimport plugins from './plugins';\nimport './App.css';\nrequire('./icons');\n\nconst savedContents = getLocalContents();\nconst DEFAULT_NODE = 'paragraph';\nconst listTypes = ['ordered-list', 'unordered-list'];\n\nfunction FNode(props) {\n  return (\n    <pre {...props.attributes}>\n      <code>{props.children}</code>\n    </pre>\n  );\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.inputImageFile = React.createRef();\n    this.inputFile = React.createRef();\n  }\n\n  state = {\n    value: Value.fromJSON(savedContents || initialContents),\n    limit: 10\n  };\n\n  onRedo = event => {\n    event.preventDefault();\n    this.editor.redo();\n  };\n  onUndo = event => {\n    event.preventDefault();\n    this.editor.undo();\n  };\n  onSave = event => {\n    event.preventDefault();\n    if (this.isLimitReached()) {\n      alert('Maximum Limit Reached!');\n    }\n    saveToLocal(this.state.value);\n  };\n  onRestore = event => {\n    event.preventDefault();\n    const saved = Value.fromJSON(savedContents);\n    let discard;\n    if (isDocumentEdited(this.state, saved)) {\n      // eslint-disable-next-line no-restricted-globals\n      discard = confirm('Document has changed! Are you sure?');\n    }\n    if (discard) {\n      this.setState({\n        value: saved\n      });\n    }\n  };\n  onLink = event => {\n    event.preventDefault();\n\n    const { editor } = this;\n    const { value } = editor;\n    const hasLinks = this.hasLinks();\n\n    if (hasLinks) {\n      editor.command(unwrapLink);\n    } else if (value.selection.isExpanded) {\n      const href = window.prompt('Enter the URL of the link:');\n\n      if (href == null) {\n        return;\n      }\n\n      editor.command(wrapLink, href);\n    } else {\n      const href = window.prompt('Enter the URL of the link:');\n\n      if (href == null) {\n        return;\n      }\n\n      const text = window.prompt('Enter the text for the link:');\n\n      if (text == null) {\n        return;\n      }\n\n      editor\n        .insertText(text)\n        .moveFocusBackward(text.length)\n        .command(wrapLink, href);\n    }\n  };\n  onImage = event => {\n    event.preventDefault();\n    const src = window.prompt('Enter the URL of the image:');\n    if (!src) return;\n    this.editor.command(insertImage, src);\n  };\n  onChange = ({ value }) => {\n    // // autosave\n    // if (isDocumentEdited(this.state, value)) {\n    //   saveToLocal(value);\n    // }\n    this.setState({ value });\n  };\n\n  onOpenImage = event => {\n    event.preventDefault();\n    this.inputImageFile.current.click();\n  };\n  onOpenFile = event => {\n    event.preventDefault();\n    this.inputFile.current.click();\n  };\n\n  onImageFileSelect = event => {\n    fileUploader(event, this.editor, imageFilesInsert);\n  };\n\n  onFileSelect = event => {\n    fileUploader(event, this.editor, filesInsert);\n  };\n  onClickBlock = (event, type) => {\n    event.preventDefault();\n    const { editor } = this;\n    const isActive = this.hasBlock(type);\n    if (listTypes.includes(type)) {\n      if (this.isList()) {\n        editor.unwrapList();\n      } else {\n        editor.wrapList({ type });\n      }\n    } else {\n      editor.setBlocks(isActive ? DEFAULT_NODE : type);\n    }\n  };\n\n  onClickMark = (event, type) => {\n    event.preventDefault();\n    this.editor.toggleMark(type);\n  };\n\n  isList = () => {\n    const { value } = this.state;\n    return value.blocks.some(block => block.type === 'list-item-child');\n  };\n\n  hasMark = type => {\n    const { value } = this.state;\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n  hasBlock = type => {\n    const { value } = this.state;\n    return value.blocks.some(node => node.type === type);\n  };\n  hasLinks = () => {\n    const { value } = this.state;\n    return value.inlines.some(inline => inline.type === 'link');\n  };\n\n  ref = editor => {\n    this.editor = editor;\n  };\n\n  isLimitReached = () =>\n    this.state.value.document.nodes.size >= this.state.limit;\n  render() {\n    return (\n      <div className=\"appcontainer\">\n        {this.renderToolbar()}\n        <div className=\"editor\">\n          <Editor\n            spellCheck\n            autoFocus\n            plugins={plugins}\n            schema={schema}\n            placeholder=\"Start typing...\"\n            value={this.state.value}\n            onChange={this.onChange}\n            renderNode={this.nodesRenderer}\n            renderMark={this.renderMark}\n            ref={this.ref}\n          />\n        </div>\n      </div>\n    );\n  }\n  onLimitChange = event => {\n    this.setState({\n      limit: event.target.value\n    });\n  };\n\n  renderToolbar = () => (\n    <Toolbar>\n      <Button\n        icon=\"save\"\n        active={!this.isLimitReached()}\n        onClick={this.onSave}\n      />\n      <Button icon=\"trash\" onClick={this.onRestore} />\n      <Button icon=\"undo\" onClick={this.onUndo} />\n      <Button icon=\"redo\" onClick={this.onRedo} />\n      {this.renderMarkButton('bold', 'bold')}\n      {this.renderMarkButton('italic', 'italic')}\n      {this.renderMarkButton('underlined', 'underline')}\n      {this.renderBlockButton('block-quote', 'quote-right')}\n      {this.renderBlockButton('ordered-list', 'list-ol')}\n      {this.renderBlockButton('unordered-list', 'list-ul')}\n      <Button icon=\"images\" onClick={this.onImage} />\n      <Button icon=\"file-image\" onClick={this.onOpenImage} />\n      <Button icon=\"file-upload\" onClick={this.onOpenFile} />\n      <Button icon=\"link\" onClick={this.onLink} />\n      <input\n        type=\"number\"\n        style={{ width: `35px`, padding: `10px` }}\n        value={this.state.limit}\n        onChange={this.onLimitChange}\n      />\n      <span>{'<-- limit'}</span>\n      {this.inputRenderer()}\n    </Toolbar>\n  );\n\n  inputRenderer = () => (\n    <div>\n      <input\n        ref={this.inputImageFile}\n        type=\"file\"\n        style={{ display: 'none' }}\n        onChange={this.onImageFileSelect}\n        accept=\"image/*\"\n      />\n      <input\n        ref={this.inputFile}\n        type=\"file\"\n        style={{ display: 'none' }}\n        onChange={this.onFileSelect}\n        accept=\"application/pdf,text/plain\"\n      />\n    </div>\n  );\n  nodesRenderer = (props, editor, next) => {\n    const { attributes, children, node, isFocused } = props;\n    switch (node.type) {\n      case 'block-quote':\n        return <blockquote {...attributes}>{children}</blockquote>;\n      case 'unorderd-list':\n        return <ul {...attributes}>{children}</ul>;\n      case 'ordered-list':\n        return <ol {...attributes}>{children}</ol>;\n      case 'list-item':\n        return <li {...attributes}>{children}</li>;\n\n      case 'image': {\n        const src = node.data.get('src');\n        return (\n          <img\n            src={src}\n            selected={isFocused}\n            {...attributes}\n            alt=\"\"\n            className=\"image-node\"\n          />\n        );\n      }\n      case 'link': {\n        const { data } = node;\n        const href = data.get('href');\n        return (\n          <a {...attributes} href={href}>\n            {children}\n          </a>\n        );\n      }\n      case 'file': {\n        const data = node.data.toObject();\n\n        return <FileNode {...data} />;\n      }\n      default:\n        return next();\n    }\n  };\n\n  renderMark = (props, editor, next) => {\n    const { children, mark, attributes } = props;\n\n    switch (mark.type) {\n      case 'bold':\n        return <strong {...attributes}>{children}</strong>;\n      case 'italic':\n        return <em {...attributes}>{children}</em>;\n      case 'underlined':\n        return <u {...attributes}>{children}</u>;\n      default:\n        return next();\n    }\n  };\n  renderMarkButton = (type, icon) => {\n    const isActive = this.hasMark(type);\n    return (\n      <Button\n        icon={icon}\n        active={isActive}\n        onClick={event => this.onClickMark(event, type)}\n      />\n    );\n  };\n\n  renderBlockButton = (type, icon) => {\n    return (\n      <Button\n        icon={icon}\n        active={false}\n        onClick={event => this.onClickBlock(event, type)}\n      />\n    );\n  };\n}\n\nexport default (process.env.NODE_ENV === 'development'\n  ? hot(module)(App)\n  : App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}